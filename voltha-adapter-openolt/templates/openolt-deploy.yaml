# Copyright 2019-present Open Networking Foundation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
{{- $log_level := tpl .Values.adapter_open_olt.log_level . | upper }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "fullname" . }}"
  namespace: {{ .Release.Namespace }}
  {{- if or (hasKey .Values "extra_deployment_labels") (hasKey .Values "openolt_deployment_labels") }}
  labels:
    {{- if hasKey .Values "extra_deployment_labels" }}
    {{- range $key, $val := .Values.extra_deployment_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end }}
    {{- if hasKey .Values "openolt_deployment_labels" }}
    {{- range $key, $val := .Values.openolt_deployment_labels }}
    {{ $key }}: {{ $val | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app: adapter-open-olt
      release: {{ .Release.Name }}
  template:
    metadata:
      namespace: {{ .Release.Namespace }}
      labels:
        app: adapter-open-olt
        release: {{ .Release.Name }}
        app.kubernetes.io/name: "adapter-open-olt"
        app.kubernetes.io/version: {{ quote .Chart.AppVersion }}
        app.kubernetes.io/component: "adapter"
        app.kubernetes.io/part-of: "voltha"
        app.kubernetes.io/managed-by: {{ quote .Release.Service }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        {{- if hasKey .Values "extra_pod_labels" }}
        {{- range $key, $val := .Values.extra_pod_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        {{- end }}
        {{- if hasKey .Values "openolt_pod_labels" }}
        {{- range $key, $val := .Values.openolt_pod_labels }}
        {{ $key }}: {{ $val | quote }}
        {{- end }}
        {{- end }}
    spec:
      {{- if .Values.securityContext.enabled }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      {{- end }}
      {{- if .Values.nodeAffinityConfig.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "{{ .Values.nodeAffinityConfig.node_label_key }}"
                operator: In
                values:
                - "{{ .Values.nodeAffinityConfig.node_label_value }}"
      {{- end }}
      containers:
        - name: adapter-open-olt
          image: '{{ tpl .Values.images.adapter_open_olt.registry . }}{{ tpl .Values.images.adapter_open_olt.repository . }}:{{ tpl ( tpl .Values.images.adapter_open_olt.tag . ) . }}'
          imagePullPolicy: {{ tpl .Values.images.adapter_open_olt.pullPolicy . }}
          env:
            - name: COMPONENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['app.kubernetes.io/name']
            - name: KV_STORE_DATAPATH_PREFIX
              value: {{ .Values.defaults.kv_store_data_prefix }}
          args:
            - "/app/openolt"
            - "--kafka_adapter_address={{ .Values.services.kafka.adapter.address }}"
            - "--kafka_cluster_address={{ .Values.services.kafka.cluster.address }}"
            - "--core_topic={{ .Values.defaults.topics.core_topic }}"
            - "--adapter_topic={{ .Values.defaults.topics.adapter_open_olt_topic }}"
            - "--kv_store_address={{ .Values.services.etcd.address }}"
            - "--kv_store_request_timeout={{ tpl .Values.adapter_open_olt.kv_store_timeout . }}"
            - "--log_level={{ $log_level }}"
            - "--current_replica={{ .Values.replicas.current_replica }}"
            - "--total_replica={{ .Values.replicas.total_replica }}"
            - "--probe_address=:8080"
            - "--trace_enabled={{ .Values.tracing.enabled }}"
            - "--trace_agent_address={{ .Values.services.tracing_agent.address }}"
            - "--log_correlation_enabled={{ .Values.log_correlation.enabled }}"
            - "--omcc_encryption={{ .Values.defaults.omcc_encryption }}"
          {{- if .Values.securityContext.enabled }}
          securityContext:
            allowPrivilegeEscalation: false
          {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /readz
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
